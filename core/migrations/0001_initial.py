# Generated by Django 4.1 on 2022-11-15 15:42

import core.modules
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.modules.upload_image_file_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='ApplicationProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('value', models.SmallIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Barcode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=250)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('tax_number', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=core.modules.upload_image_file_path)),
                ('bank_account_number', models.CharField(blank=True, max_length=300, null=True)),
                ('bank_details', models.CharField(blank=True, max_length=300, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('value', models.SmallIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=4)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=4)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=30, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('tax_number', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('is_customer', models.BooleanField(default=True)),
                ('is_supplier', models.BooleanField(default=False)),
                ('due_date_period', models.SmallIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(default=0)),
                ('uid', models.SmallIntegerField(default=0)),
                ('value', models.FloatField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=30, unique=True)),
                ('order_number', models.CharField(max_length=30, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('stock_date', models.DateTimeField(auto_now_add=True)),
                ('total', models.FloatField(default=0)),
                ('is_clocked_out', models.BooleanField(default=False)),
                ('reference_document_number', models.CharField(max_length=100, unique=True)),
                ('internal_note', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('due_date', models.DateTimeField(auto_now_add=True)),
                ('discount', models.SmallIntegerField(default=0)),
                ('discount_type', models.SmallIntegerField(default=0)),
                ('paid_status', models.BooleanField(default=False)),
                ('discount_apply_rule', models.SmallIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('language', models.CharField(max_length=4)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('expected_quantity', models.SmallIntegerField(default=1)),
                ('price_before_tax', models.FloatField(default=0)),
                ('price', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.FloatField(default=0)),
                ('product_cost', models.FloatField(default=0)),
                ('price_before_tax_after_descount', models.FloatField(default=0)),
                ('price_after_descount', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('total_after_document_discount', models.FloatField(default=0)),
                ('discount_apply_rule', models.SmallIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentItemTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=50)),
                ('stock_direction', models.SmallIntegerField(default=0)),
                ('editor_type', models.SmallIntegerField(default=0)),
                ('print_template', models.TextField(blank=True, null=True)),
                ('price_type', models.SmallIntegerField(default=0)),
                ('language', models.CharField(max_length=4)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FiscalItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plu', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('vat', models.CharField(max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FloorPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(default='Transparent', max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FloorPlanTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position_x', models.FloatField(default=0)),
                ('position_y', models.FloatField(default=0)),
                ('width', models.FloatField(default=0)),
                ('height', models.FloatField(default=0)),
                ('is_round', models.SmallIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Migration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to=core.modules.upload_image_file_path)),
                ('module', models.CharField(max_length=250)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('is_customer_required', models.BooleanField(default=False)),
                ('is_fiscal', models.BooleanField(default=False)),
                ('is_slip_required', models.BooleanField(default=False)),
                ('is_change_allowed', models.BooleanField(default=True)),
                ('ordinal', models.BooleanField(default=False)),
                ('is_enabled', models.BooleanField(default=True)),
                ('is_quick_payment', models.BooleanField(default=True)),
                ('open_cash_drawer', models.BooleanField(default=False)),
                ('shortcut', models.CharField(blank=True, max_length=30, null=True)),
                ('mark_as_paid', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PosOrder',
            fields=[
                ('number', models.CharField(db_index=True, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('discount', models.SmallIntegerField(default=0)),
                ('discount_type', models.SmallIntegerField(default=0)),
                ('total', models.FloatField(default=0)),
                ('status', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='PosOrderItem',
            fields=[
                ('number', models.CharField(db_index=True, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('quantity', models.SmallIntegerField(default=1)),
                ('price', models.FloatField(default=0)),
                ('is_locked', models.BooleanField(default=False)),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.FloatField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('voide_by', models.SmallIntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('bundle', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PosPrinterSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=30, unique=True)),
                ('printer_name', models.CharField(max_length=100)),
                ('is_enabled', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PrintStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('plu', models.IntegerField(blank=True, null=True)),
                ('measurement_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('price', models.FloatField(default=0)),
                ('is_tax_inclusive_price', models.BooleanField(default=False)),
                ('is_price_change_allowed', models.BooleanField(default=False)),
                ('is_service', models.BooleanField(default=False)),
                ('is_using_default_quantity', models.BooleanField(default=True)),
                ('is_product', models.BooleanField(default=True)),
                ('cost', models.FloatField(blank=True, default=0, null=True)),
                ('margin', models.DecimalField(decimal_places=3, default=0, max_digits=18)),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.modules.upload_image_file_path)),
                ('color', models.CharField(default='Transparent', max_length=50)),
                ('is_enabled', models.BooleanField(default=True)),
                ('age_restriction', models.SmallIntegerField(blank=True, null=True)),
                ('last_purchase_price', models.FloatField(default=0)),
                ('rank', models.SmallIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='core.currency')),
            ],
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(default='Transparent', max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.modules.upload_image_file_path)),
                ('rank', models.SmallIntegerField(default=0)),
                ('is_product', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('parent_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groups', to='core.productgroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productGroups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('rank',),
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('days_of_week', models.SmallIntegerField()),
                ('is_enabled', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ZReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.SmallIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('from_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_documents', to='core.document')),
                ('to_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_documents', to='core.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('rate', models.DecimalField(decimal_places=4, default=0, max_digits=18)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('is_fixed', models.BooleanField(default=False)),
                ('is_tax_on_total', models.BooleanField(default=False)),
                ('is_enabled', models.BooleanField(default=False)),
                ('amount', models.FloatField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StockControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reorder_poing', models.FloatField(default=0)),
                ('preferred_quantity', models.SmallIntegerField(default=1)),
                ('is_low_stock_warning_enabled', models.BooleanField(default=True)),
                ('low_stock_warning_quantity', models.SmallIntegerField(default=1)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_controls', to='core.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_controls', to='core.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_controls', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.SmallIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='core.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='core.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='StartingCash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('starting_cash_type', models.SmallIntegerField(default=0)),
                ('z_report_number', models.SmallIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='starting_cashes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'starting cash',
            },
        ),
        migrations.CreateModel(
            name='SecurityKey',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('level', models.SmallIntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_keys', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PromotionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(default=uuid.uuid4)),
                ('discount_type', models.SmallIntegerField(default=0)),
                ('price_type', models.SmallIntegerField(default=0)),
                ('value', models.FloatField(default=0)),
                ('is_conditional', models.BooleanField(default=False)),
                ('quantity', models.FloatField(default=1)),
                ('condition_type', models.SmallIntegerField(default=0)),
                ('quantity_limit', models.SmallIntegerField(default=0)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion_items', to='core.promotion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productTaxes', to='core.product')),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productTaxes', to='core.tax')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productTaxes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductPrintStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('print_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productPrintStations', to='core.printstation')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productPrintStations', to='core.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productPrintStations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductGroupPrintStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('print_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productGroupPrintStations', to='core.printstation')),
                ('product_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productGroupPrintStations', to='core.productgroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productGroupPrintStations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=300)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='parent_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='core.productgroup'),
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PrintStationPosPrinterSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos_printer_selection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.posprinterselection')),
                ('print_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.printstation')),
            ],
        ),
        migrations.CreateModel(
            name='PosPrinterSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('printer_name', models.CharField(max_length=100, unique=True)),
                ('paper_width', models.SmallIntegerField(default=32)),
                ('header', models.CharField(max_length=100)),
                ('footer', models.CharField(max_length=100)),
                ('feed_lines', models.SmallIntegerField(default=0)),
                ('cut_paper', models.SmallIntegerField(default=1)),
                ('print_bitmap', models.SmallIntegerField(default=0)),
                ('open_cash_drawer', models.SmallIntegerField(default=1)),
                ('cash_drawer_command', models.CharField(max_length=100)),
                ('header_alignment', models.SmallIntegerField(default=0)),
                ('footer_alignment', models.SmallIntegerField(default=0)),
                ('is_formatting_enabled', models.BooleanField(default=False)),
                ('printer_type', models.SmallIntegerField(default=0)),
                ('number_of_copies', models.SmallIntegerField(default=1)),
                ('code_page', models.SmallIntegerField(default=-1)),
                ('character_set', models.SmallIntegerField(default=-1)),
                ('margin', models.SmallIntegerField(default=0)),
                ('left_margin', models.FloatField(default=1)),
                ('top_margin', models.FloatField(default=0)),
                ('right_margin', models.FloatField(default=0)),
                ('bottom_margin', models.FloatField(default=0)),
                ('print_barcode', models.SmallIntegerField(default=1)),
                ('font_name', models.CharField(max_length=100)),
                ('font_size_percent', models.FloatField(default=100.0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pos_printer_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'PosPrinterSettings',
            },
        ),
        migrations.CreateModel(
            name='PosPrinterSelectionSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_width', models.SmallIntegerField(default=32)),
                ('header', models.CharField(max_length=100)),
                ('footer', models.CharField(max_length=100)),
                ('feed_lines', models.SmallIntegerField(default=0)),
                ('cut_paper', models.SmallIntegerField(default=1)),
                ('print_bitmap', models.SmallIntegerField(default=0)),
                ('open_cash_drawer', models.SmallIntegerField(default=1)),
                ('cash_drawer_command', models.CharField(max_length=100)),
                ('header_alignment', models.SmallIntegerField(default=0)),
                ('footer_alignment', models.SmallIntegerField(default=0)),
                ('is_formatting_enabled', models.BooleanField(default=False)),
                ('printer_type', models.SmallIntegerField(default=0)),
                ('number_of_copies', models.SmallIntegerField(default=1)),
                ('code_page', models.SmallIntegerField(default=-1)),
                ('character_set', models.SmallIntegerField(default=-1)),
                ('margin', models.SmallIntegerField(default=0)),
                ('left_margin', models.FloatField(default=1)),
                ('top_margin', models.FloatField(default=0)),
                ('right_margin', models.FloatField(default=0)),
                ('bottom_margin', models.FloatField(default=0)),
                ('print_barcode', models.SmallIntegerField(default=1)),
                ('font_name', models.CharField(max_length=100)),
                ('font_size_percent', models.FloatField(default=100.0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pos_printer_selection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pos_printer_selection_settings', to='core.posprinterselection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pos_printer_selection_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'PosPrinterSelectionSettings',
            },
        ),
        migrations.AddConstraint(
            model_name='posprinterselection',
            constraint=models.UniqueConstraint(fields=('id', 'key'), name='unique_printer_keys'),
        ),
        migrations.AddField(
            model_name='posorderitem',
            name='order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.posorder'),
        ),
        migrations.AddField(
            model_name='posorderitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_items', to='core.product'),
        ),
        migrations.AddField(
            model_name='posorderitem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='posorder',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='paymenttype',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_types', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='document',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.document'),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='payments', to='core.paymenttype'),
        ),
        migrations.AddField(
            model_name='payment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='loyaltycard',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_loyalty_cards', to='core.customer'),
        ),
        migrations.AddField(
            model_name='loyaltycard',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_loyalty_cards', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='floorplantable',
            name='floor_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='core.floorplan'),
        ),
        migrations.AddField(
            model_name='floorplantable',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floor_plan_tables', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='floorplan',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floor_plans', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fiscalitem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fiscals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documenttype',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_types', to='core.documentcategory'),
        ),
        migrations.AddField(
            model_name='documenttype',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_types', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documenttype',
            name='warehouse',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_types', to='core.warehouse'),
        ),
        migrations.AddField(
            model_name='documentitemtax',
            name='document_item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_item_taxes', to='core.documentitem'),
        ),
        migrations.AddField(
            model_name='documentitemtax',
            name='tax',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='document_item_taxes', to='core.tax'),
        ),
        migrations.AddField(
            model_name='documentitemtax',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_item_taxes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentitem',
            name='document',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_items', to='core.document'),
        ),
        migrations.AddField(
            model_name='documentitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='document_items', to='core.product'),
        ),
        migrations.AddField(
            model_name='documentitem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentcategory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_categories', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='documents', to='core.customer'),
        ),
        migrations.AddField(
            model_name='document',
            name='document_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='documents', to='core.documenttype'),
        ),
        migrations.AddField(
            model_name='document',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='warehouse',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='documents', to='core.warehouse'),
        ),
        migrations.AddField(
            model_name='customerdiscount',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discounts', to='core.customer'),
        ),
        migrations.AddField(
            model_name='customerdiscount',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_discounts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customer',
            name='country',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='core.country'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='currency',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='currencies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='country',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='countries', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='counter',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='country',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='companies', to='core.country'),
        ),
        migrations.AddField(
            model_name='company',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='barcode',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barcodes', to='core.product'),
        ),
        migrations.AddField(
            model_name='barcode',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barcodes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='applicationproperty',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_properties', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='stockcontrol',
            index=models.Index(fields=['product'], name='stock_control_product_index'),
        ),
        migrations.AddConstraint(
            model_name='startingcash',
            constraint=models.UniqueConstraint(fields=('id',), name='unique_id'),
        ),
        migrations.AddConstraint(
            model_name='producttax',
            constraint=models.UniqueConstraint(fields=('product', 'tax'), name='unique_product_taxes'),
        ),
        migrations.AddConstraint(
            model_name='productprintstation',
            constraint=models.UniqueConstraint(fields=('product', 'print_station'), name='product_print_station'),
        ),
        migrations.AddConstraint(
            model_name='productgroupprintstation',
            constraint=models.UniqueConstraint(fields=('product_group', 'print_station'), name='pg_print_station'),
        ),
        migrations.AddConstraint(
            model_name='printstationposprinterselection',
            constraint=models.UniqueConstraint(fields=('print_station', 'pos_printer_selection'), name='unique_printer_pos_printer_selection'),
        ),
        migrations.AddConstraint(
            model_name='posprintersettings',
            constraint=models.UniqueConstraint(fields=('id', 'printer_name'), name='unique_printer_name'),
        ),
        migrations.AddConstraint(
            model_name='customerdiscount',
            constraint=models.UniqueConstraint(fields=('customer', 'type', 'uid'), name='unique_customer_discounts'),
        ),
    ]
